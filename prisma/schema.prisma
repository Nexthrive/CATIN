// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model User {
  id_user   String   @id @default(uuid())
  name      String
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Admin {
  id_admin  String   @id @default(uuid())
  name      String
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Tamu {
  ID_Tamu     String   @id
  weddingId   String
  wedding     Wedding  @relation(fields: [weddingId], references: [id_wedding], onDelete: Cascade)
  Nama_tamu   String   @db.VarChar(40)
  Email       String   @db.VarChar(40)
  No_hp       String   @db.VarChar(15)
  Alamat      String   @db.VarChar(255)
  Hadir       Boolean  @default(false)
  Kode_token  String   @unique
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Wedding {
  id_wedding      String   @id
  bride_name      String   @db.VarChar(50)
  bride_details   String
  groom_name      String   @db.VarChar(50)
  groom_details   String
  nama_tempat     String   @db.VarChar(100)
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  tamu            Tamu[]
}
